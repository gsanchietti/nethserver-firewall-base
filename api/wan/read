#!/usr/bin/perl

#
# Copyright (C) 2018 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

use strict;
use warnings;
use esmith::ConfigDB;
use esmith::NetworksDB;
use JSON;

require '/usr/libexec/nethserver/api/lib/helper_functions.pl';

sub read_provider_status
{
    my $interface = shift || return 0;
    my $file = "/var/lib/shorewall/$interface.status";
    if ( -f $file ) {
        open my $fh, '<', $file;
        my $content = do { local $/; <$fh> };
        chomp $content;
        return 1 if ($content == "0");
    }
    return 0;
}

my $input = readInput();

my $cmd = $input->{'action'} || 'info';

if($cmd eq 'multiwan') {
    my $ret = {};
    my $ndb = esmith::NetworksDB->open_ro();
    my $cdb = esmith::ConfigDB->open_ro();

    # Providers
    foreach ($ndb->get_all_by_prop('type' => 'provider')) {
        my $i = $_->prop('interface') || next;
        my $w = $_->prop('weight') || 0;
        $ret->{'status'}{$_->key} = {"status" => read_provider_status($i)};

        my $in = 0;
        my $out = 0;
        my $interface = $ndb->get($i);
        if ($interface) {
            $in = $interface->prop('FwInBandwidth') || 0;
            $out = $interface->prop('FwOutBandwidth') || 0;
        }
        $ret->{'configuration'}{'providers'}{$_->key} = {"interface" => $i, "weight" => $w, 'FwInBandwidth' => $in, 'FwOutBandwidth' => $out};
    }

    $ret->{'configuration'}{'multiwan'}{'CheckIP'} = split(",",$cdb->get_prop('firewall','CheckIP')); 
    foreach (qw(MaxNumberPacketLoss MaxPercentPacketLoss NotifyWan PingInterval WanMode)) {
        $ret->{'configuration'}{'multiwan'}{$_} = $cdb->get_prop('firewall',$_);
    }

    print encode_json($ret);
} else {
    error();
}
